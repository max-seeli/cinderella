(declare-const sm_upd_1_x3_6 Real)
(declare-const sm_upd_1_x4_0 Real)
(declare-const rank_1_5 Real)
(declare-const sm_upd_1_x1_4 Real)
(declare-const sm_upd_1_x3_0 Real)
(declare-const rank_1_0 Real)
(declare-const sm_upd_1_x1_0 Real)
(declare-const sm_upd_1_x0_0 Real)
(declare-const rank_1_2 Real)
(declare-const sm_upd_1_x1_6 Real)
(declare-const rank_1_3 Real)
(declare-const sm_upd_1_x4_4 Real)
(declare-const sm_upd_1_x2_1 Real)
(declare-const rank_1_4 Real)
(declare-const sm_upd_1_x2_6 Real)
(declare-const t Real)
(declare-const sm_upd_1_x3_2 Real)
(declare-const sm_upd_1_x4_2 Real)
(declare-const sm_upd_1_x1_3 Real)
(declare-const sm_upd_1_x2_3 Real)
(declare-const sm_upd_1_x1_2 Real)
(declare-const rank_1_1 Real)
(declare-const sm_upd_1_x0_3 Real)
(declare-const sm_upd_1_x0_1 Real)
(declare-const sm_upd_1_x0_6 Real)
(declare-const sm_upd_1_x3_1 Real)
(declare-const sm_upd_1_x4_1 Real)
(declare-const sm_upd_1_x1_5 Real)
(declare-const sm_upd_1_x1_1 Real)
(declare-const sm_upd_1_x3_3 Real)
(declare-const sm_upd_1_x2_4 Real)
(declare-const sm_upd_1_x4_5 Real)
(declare-const sm_upd_1_x4_6 Real)
(declare-const sm_upd_1_x0_4 Real)
(declare-const sm_upd_1_x3_5 Real)
(declare-const sm_upd_1_x2_2 Real)
(declare-const sm_upd_1_x0_5 Real)
(declare-const sm_upd_1_x2_0 Real)
(declare-const sm_upd_1_x3_4 Real)
(declare-const sm_upd_1_x4_3 Real)
(declare-const sm_upd_1_x2_5 Real)
(declare-const sm_upd_1_x0_2 Real)
(assert (> t 0))
(assert (forall ((x0 Real) (x1 Real) (x2 Real) (x3 Real) (x4 Real) (eps Real)) (=> (and (>= x0 0) (>= x1 0) (>= x2 0) (>= x3 0) (>= x4 0) (> eps 0) (< eps 1)) (and (>= (+ sm_upd_1_x0_0 (* eps sm_upd_1_x0_6) (* sm_upd_1_x0_1 x0) (* sm_upd_1_x0_2 x1) (* sm_upd_1_x0_3 x2) (* sm_upd_1_x0_4 x3) (* sm_upd_1_x0_5 x4)) 0) (>= (+ sm_upd_1_x1_0 (* eps sm_upd_1_x1_6) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4)) 0) (>= (+ sm_upd_1_x2_0 (* eps sm_upd_1_x2_6) (* sm_upd_1_x2_1 x0) (* sm_upd_1_x2_2 x1) (* sm_upd_1_x2_3 x2) (* sm_upd_1_x2_4 x3) (* sm_upd_1_x2_5 x4)) 0) (>= (+ sm_upd_1_x3_0 (* eps sm_upd_1_x3_6) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4)) 0) (>= (+ sm_upd_1_x4_0 (* eps sm_upd_1_x4_6) (* sm_upd_1_x4_1 x0) (* sm_upd_1_x4_2 x1) (* sm_upd_1_x4_3 x2) (* sm_upd_1_x4_4 x3) (* sm_upd_1_x4_5 x4)) 0) (>= (+ 1 x0 x1 x2 x3 x4) (+ sm_upd_1_x0_0 sm_upd_1_x1_0 sm_upd_1_x2_0 sm_upd_1_x3_0 sm_upd_1_x4_0 x0 x1 x2 x3 x4 (* eps sm_upd_1_x0_6) (* eps sm_upd_1_x1_6) (* eps sm_upd_1_x2_6) (* eps sm_upd_1_x3_6) (* eps sm_upd_1_x4_6) (* sm_upd_1_x0_1 x0) (* sm_upd_1_x0_2 x1) (* sm_upd_1_x0_3 x2) (* sm_upd_1_x0_4 x3) (* sm_upd_1_x0_5 x4) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4) (* sm_upd_1_x2_1 x0) (* sm_upd_1_x2_2 x1) (* sm_upd_1_x2_3 x2) (* sm_upd_1_x2_4 x3) (* sm_upd_1_x2_5 x4) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4) (* sm_upd_1_x4_1 x0) (* sm_upd_1_x4_2 x1) (* sm_upd_1_x4_3 x2) (* sm_upd_1_x4_4 x3) (* sm_upd_1_x4_5 x4)))))))
(assert (forall ((x0 Real) (x1 Real) (x2 Real) (x3 Real) (x4 Real) (eps Real)) (=> (and (>= x0 0) (>= x1 0) (>= x2 0) (>= x3 0) (>= x4 0) (<= eps 1) (> eps 0) (< eps 1) (<= (+ eps sm_upd_1_x3_0 x3 (* eps sm_upd_1_x3_6) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4)) 1)) (and (>= (+ rank_1_0 (* rank_1_3 (+ sm_upd_1_x2_0 x2 (* eps sm_upd_1_x2_6) (* sm_upd_1_x2_1 x0) (* sm_upd_1_x2_2 x1) (* sm_upd_1_x2_3 x2) (* sm_upd_1_x2_4 x3) (* sm_upd_1_x2_5 x4))) (* rank_1_4 (+ sm_upd_1_x3_0 x3 (* eps sm_upd_1_x3_6) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4))) (* rank_1_5 (+ sm_upd_1_x4_0 x4 (* eps sm_upd_1_x4_6) (* sm_upd_1_x4_1 x0) (* sm_upd_1_x4_2 x1) (* sm_upd_1_x4_3 x2) (* sm_upd_1_x4_4 x3) (* sm_upd_1_x4_5 x4)))) 0) (>= (+ (* rank_1_1 x0) (* rank_1_2 x1) (* rank_1_3 x2) (* rank_1_4 x3) (* rank_1_5 x4) (* -1 rank_1_3 (+ sm_upd_1_x2_0 x2 (* eps sm_upd_1_x2_6) (* sm_upd_1_x2_1 x0) (* sm_upd_1_x2_2 x1) (* sm_upd_1_x2_3 x2) (* sm_upd_1_x2_4 x3) (* sm_upd_1_x2_5 x4))) (* -1 rank_1_4 (+ sm_upd_1_x3_0 x3 (* eps sm_upd_1_x3_6) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4))) (* -1 rank_1_5 (+ sm_upd_1_x4_0 x4 (* eps sm_upd_1_x4_6) (* sm_upd_1_x4_1 x0) (* sm_upd_1_x4_2 x1) (* sm_upd_1_x4_3 x2) (* sm_upd_1_x4_4 x3) (* sm_upd_1_x4_5 x4)))) (* eps t))))))
(assert (forall ((x0 Real) (x1 Real) (x2 Real) (x3 Real) (x4 Real) (eps Real)) (=> (and (>= x0 0) (>= x1 0) (>= x2 0) (>= x3 0) (>= x4 0) (<= eps 1) (> eps 0) (< eps 1) (<= (+ eps sm_upd_1_x3_0 x3 (* eps sm_upd_1_x3_6) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4)) 1)) (and (>= (+ rank_1_0 (* rank_1_1 (+ sm_upd_1_x0_0 x0 (* eps sm_upd_1_x0_6) (* sm_upd_1_x0_1 x0) (* sm_upd_1_x0_2 x1) (* sm_upd_1_x0_3 x2) (* sm_upd_1_x0_4 x3) (* sm_upd_1_x0_5 x4))) (* rank_1_4 (+ sm_upd_1_x3_0 x3 (* eps sm_upd_1_x3_6) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4))) (* rank_1_5 (+ sm_upd_1_x4_0 x4 (* eps sm_upd_1_x4_6) (* sm_upd_1_x4_1 x0) (* sm_upd_1_x4_2 x1) (* sm_upd_1_x4_3 x2) (* sm_upd_1_x4_4 x3) (* sm_upd_1_x4_5 x4)))) 0) (>= (+ (* rank_1_1 x0) (* rank_1_2 x1) (* rank_1_3 x2) (* rank_1_4 x3) (* rank_1_5 x4) (* -1 rank_1_1 (+ sm_upd_1_x0_0 x0 (* eps sm_upd_1_x0_6) (* sm_upd_1_x0_1 x0) (* sm_upd_1_x0_2 x1) (* sm_upd_1_x0_3 x2) (* sm_upd_1_x0_4 x3) (* sm_upd_1_x0_5 x4))) (* -1 rank_1_4 (+ sm_upd_1_x3_0 x3 (* eps sm_upd_1_x3_6) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4))) (* -1 rank_1_5 (+ sm_upd_1_x4_0 x4 (* eps sm_upd_1_x4_6) (* sm_upd_1_x4_1 x0) (* sm_upd_1_x4_2 x1) (* sm_upd_1_x4_3 x2) (* sm_upd_1_x4_4 x3) (* sm_upd_1_x4_5 x4)))) (* eps t))))))
(assert (forall ((x0 Real) (x1 Real) (x2 Real) (x3 Real) (x4 Real) (eps Real)) (=> (and (>= x0 0) (>= x1 0) (>= x2 0) (>= x3 0) (>= x4 0) (<= eps 1) (> eps 0) (< eps 1) (<= (+ eps sm_upd_1_x1_0 x1 (* eps sm_upd_1_x1_6) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4)) 1)) (and (>= (+ rank_1_0 (* rank_1_1 (+ sm_upd_1_x0_0 x0 (* eps sm_upd_1_x0_6) (* sm_upd_1_x0_1 x0) (* sm_upd_1_x0_2 x1) (* sm_upd_1_x0_3 x2) (* sm_upd_1_x0_4 x3) (* sm_upd_1_x0_5 x4))) (* rank_1_2 (+ sm_upd_1_x1_0 x1 (* eps sm_upd_1_x1_6) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4))) (* rank_1_5 (+ sm_upd_1_x4_0 x4 (* eps sm_upd_1_x4_6) (* sm_upd_1_x4_1 x0) (* sm_upd_1_x4_2 x1) (* sm_upd_1_x4_3 x2) (* sm_upd_1_x4_4 x3) (* sm_upd_1_x4_5 x4)))) 0) (>= (+ (* rank_1_1 x0) (* rank_1_2 x1) (* rank_1_3 x2) (* rank_1_4 x3) (* rank_1_5 x4) (* -1 rank_1_1 (+ sm_upd_1_x0_0 x0 (* eps sm_upd_1_x0_6) (* sm_upd_1_x0_1 x0) (* sm_upd_1_x0_2 x1) (* sm_upd_1_x0_3 x2) (* sm_upd_1_x0_4 x3) (* sm_upd_1_x0_5 x4))) (* -1 rank_1_2 (+ sm_upd_1_x1_0 x1 (* eps sm_upd_1_x1_6) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4))) (* -1 rank_1_5 (+ sm_upd_1_x4_0 x4 (* eps sm_upd_1_x4_6) (* sm_upd_1_x4_1 x0) (* sm_upd_1_x4_2 x1) (* sm_upd_1_x4_3 x2) (* sm_upd_1_x4_4 x3) (* sm_upd_1_x4_5 x4)))) (* eps t))))))
(assert (forall ((x0 Real) (x1 Real) (x2 Real) (x3 Real) (x4 Real) (eps Real)) (=> (and (>= x0 0) (>= x1 0) (>= x2 0) (>= x3 0) (>= x4 0) (<= eps 1) (> eps 0) (< eps 1) (<= (+ eps sm_upd_1_x1_0 x1 (* eps sm_upd_1_x1_6) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4)) 1)) (and (>= (+ rank_1_0 (* rank_1_1 (+ sm_upd_1_x0_0 x0 (* eps sm_upd_1_x0_6) (* sm_upd_1_x0_1 x0) (* sm_upd_1_x0_2 x1) (* sm_upd_1_x0_3 x2) (* sm_upd_1_x0_4 x3) (* sm_upd_1_x0_5 x4))) (* rank_1_2 (+ sm_upd_1_x1_0 x1 (* eps sm_upd_1_x1_6) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4))) (* rank_1_3 (+ sm_upd_1_x2_0 x2 (* eps sm_upd_1_x2_6) (* sm_upd_1_x2_1 x0) (* sm_upd_1_x2_2 x1) (* sm_upd_1_x2_3 x2) (* sm_upd_1_x2_4 x3) (* sm_upd_1_x2_5 x4)))) 0) (>= (+ (* rank_1_1 x0) (* rank_1_2 x1) (* rank_1_3 x2) (* rank_1_4 x3) (* rank_1_5 x4) (* -1 rank_1_1 (+ sm_upd_1_x0_0 x0 (* eps sm_upd_1_x0_6) (* sm_upd_1_x0_1 x0) (* sm_upd_1_x0_2 x1) (* sm_upd_1_x0_3 x2) (* sm_upd_1_x0_4 x3) (* sm_upd_1_x0_5 x4))) (* -1 rank_1_2 (+ sm_upd_1_x1_0 x1 (* eps sm_upd_1_x1_6) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4))) (* -1 rank_1_3 (+ sm_upd_1_x2_0 x2 (* eps sm_upd_1_x2_6) (* sm_upd_1_x2_1 x0) (* sm_upd_1_x2_2 x1) (* sm_upd_1_x2_3 x2) (* sm_upd_1_x2_4 x3) (* sm_upd_1_x2_5 x4)))) (* eps t))))))
(assert (forall ((x0 Real) (x1 Real) (x2 Real) (x3 Real) (x4 Real) (eps Real)) (=> (and (>= x0 0) (>= x1 0) (>= x2 0) (>= x3 0) (>= x4 0) (> eps 0) (< eps 1) (<= (+ eps sm_upd_1_x1_0 x1 (* eps sm_upd_1_x1_6) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4)) 1) (<= (+ eps sm_upd_1_x3_0 x3 (* eps sm_upd_1_x3_6) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4)) 1)) (and (>= (+ rank_1_0 (* rank_1_2 (+ sm_upd_1_x1_0 x1 (* eps sm_upd_1_x1_6) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4))) (* rank_1_3 (+ sm_upd_1_x2_0 x2 (* eps sm_upd_1_x2_6) (* sm_upd_1_x2_1 x0) (* sm_upd_1_x2_2 x1) (* sm_upd_1_x2_3 x2) (* sm_upd_1_x2_4 x3) (* sm_upd_1_x2_5 x4))) (* rank_1_4 (+ sm_upd_1_x3_0 x3 (* eps sm_upd_1_x3_6) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4)))) 0) (>= (+ (* rank_1_1 x0) (* rank_1_2 x1) (* rank_1_3 x2) (* rank_1_4 x3) (* rank_1_5 x4) (* -1 rank_1_2 (+ sm_upd_1_x1_0 x1 (* eps sm_upd_1_x1_6) (* sm_upd_1_x1_1 x0) (* sm_upd_1_x1_2 x1) (* sm_upd_1_x1_3 x2) (* sm_upd_1_x1_4 x3) (* sm_upd_1_x1_5 x4))) (* -1 rank_1_3 (+ sm_upd_1_x2_0 x2 (* eps sm_upd_1_x2_6) (* sm_upd_1_x2_1 x0) (* sm_upd_1_x2_2 x1) (* sm_upd_1_x2_3 x2) (* sm_upd_1_x2_4 x3) (* sm_upd_1_x2_5 x4))) (* -1 rank_1_4 (+ sm_upd_1_x3_0 x3 (* eps sm_upd_1_x3_6) (* sm_upd_1_x3_1 x0) (* sm_upd_1_x3_2 x1) (* sm_upd_1_x3_3 x2) (* sm_upd_1_x3_4 x3) (* sm_upd_1_x3_5 x4)))) (* eps t))))))
(check-sat)
(get-model)